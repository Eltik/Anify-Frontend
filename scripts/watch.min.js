(function(_0x3ce031, _0x36fa22) {
    const _0x4ff46b = _0x3ad1,
        _0xe4c391 = _0x3ce031();
    while (!![]) {
        try {
            const _0x4c20f5 = -parseInt(_0x4ff46b(0x1ad)) / 0x1 + parseInt(_0x4ff46b(0x1a2)) / 0x2 * (parseInt(_0x4ff46b(0x1b4)) / 0x3) + parseInt(_0x4ff46b(0x1a4)) / 0x4 * (-parseInt(_0x4ff46b(0x1af)) / 0x5) + parseInt(_0x4ff46b(0x1b7)) / 0x6 + parseInt(_0x4ff46b(0x1cd)) / 0x7 * (-parseInt(_0x4ff46b(0x1a6)) / 0x8) + parseInt(_0x4ff46b(0x1b2)) / 0x9 + -parseInt(_0x4ff46b(0x1b0)) / 0xa;
            if (_0x4c20f5 === _0x36fa22) break;
            else _0xe4c391['push'](_0xe4c391['shift']());
        } catch (_0x48dbab) {
            _0xe4c391['push'](_0xe4c391['shift']());
        }
    }
}(_0xabd0, 0xc8dde));

function load(_0x5810d7, _0xa36693, _0x1f18aa) {
    const _0x24f204 = _0x3ad1;
    _0x1f18aa = decrypt(_0x1f18aa), fetch(api_server + _0x24f204(0x1bd), {
        'method': _0x24f204(0x19e),
        'body': JSON[_0x24f204(0x1b6)]({
            'id': _0x5810d7
        }),
        'headers': {
            'Content-Type': _0x24f204(0x1c3)
        }
    })[_0x24f204(0x1ab)](async _0x3a9a8b => {
        const _0x1ce828 = _0x24f204,
            _0x58914b = await _0x3a9a8b[_0x1ce828(0x1bf)]();
        episodeCovers = _0x58914b;
    })[_0x24f204(0x1c4)](_0x141eca => {
        return null;
    });
    const _0x57423d = {
        'id': _0x5810d7,
        'provider': _0xa36693,
        'watchId': _0x1f18aa
    };
    fetch(api_server + _0x24f204(0x1aa), {
        'method': _0x24f204(0x19e),
        'body': JSON[_0x24f204(0x1b6)](_0x57423d),
        'headers': {
            'Content-Type': 'application/json'
        }
    })['then'](async _0x13325f => {
        const _0x892f67 = _0x24f204;
        let _0x26bdc5 = await _0x13325f[_0x892f67(0x1bf)]();
        if (_0x26bdc5[_0x892f67(0x1c0)]) return;
        sources = _0x26bdc5[_0x892f67(0x1ae)], sources[_0x892f67(0x1c2)](_0x145a33 => {
            const _0x1abf34 = _0x892f67;
            _0x145a33[_0x1abf34(0x1c6)] && (_0x145a33[_0x1abf34(0x1b9)] = 'https://cors.eltik.net/' + _0x145a33[_0x1abf34(0x1b9)]);
        }), subtitles = _0x26bdc5[_0x892f67(0x1cb)], intro = _0x26bdc5[_0x892f67(0x1a8)];
        sources['length'] === 0x0 && alert(_0x892f67(0x1be));
        const _0x207c56 = {
            'id': _0x5810d7
        };
        fetch(api_server + _0x892f67(0x1ac), {
            'method': _0x892f67(0x19e),
            'body': JSON[_0x892f67(0x1b6)](_0x207c56),
            'headers': {
                'Content-Type': _0x892f67(0x1c3)
            }
        })['then'](async _0x30b31a => {
            const _0x4947c8 = _0x892f67,
                _0xf09812 = await _0x30b31a[_0x4947c8(0x1bf)]();
            episodes = _0xf09812;
            let _0x29b52e = -0x1;
            for (let _0x8eb24e = 0x0; _0x8eb24e < episodes[_0x4947c8(0x1ca)]; _0x8eb24e++) {
                const _0xc128cc = episodes[_0x8eb24e];
                for (let _0x1b6c69 = 0x0; _0x1b6c69 < _0xc128cc[_0x4947c8(0x1c1)][_0x4947c8(0x1ca)]; _0x1b6c69++) {
                    const _0x10c022 = _0xc128cc[_0x4947c8(0x1c1)][_0x1b6c69];
                    if (_0x10c022?.['id'] === _0x1f18aa || _0x10c022?.[_0x4947c8(0x1b9)] === _0x1f18aa) {
                        _0x29b52e = _0x10c022[_0x4947c8(0x1c7)] ?? _0x8eb24e;
                        break;
                    }
                }
            }
            _0x29b52e != -0x1 && intro[_0x4947c8(0x1a9)] === 0x0 && fetch(api_server + '/skip_times', {
                'method': _0x4947c8(0x19e),
                'body': JSON['stringify']({
                    'id': _0x5810d7,
                    'episodeNumber': _0x29b52e
                }),
                'headers': {
                    'Content-Type': _0x4947c8(0x1c3)
                }
            })['then'](async _0xd04911 => {
                const _0x1ee56c = _0x4947c8,
                    _0x36d3c7 = await _0xd04911[_0x1ee56c(0x1bf)]();
                if (_0x36d3c7[_0x1ee56c(0x1a3)] === 0x1f4) {
                    console[_0x1ee56c(0x1c9)]('Unable\x20to\x20fetch\x20skip\x20times.');
                    return;
                }
                for (let _0x46b02d = 0x0; _0x46b02d < _0x36d3c7[_0x1ee56c(0x1ca)]; _0x46b02d++) {
                    _0x36d3c7[_0x46b02d]['skipType'] === 'op' && (intro['start'] = _0x36d3c7[_0x46b02d][_0x1ee56c(0x1a7)][_0x1ee56c(0x1a1)], intro[_0x1ee56c(0x1a9)] = _0x36d3c7[_0x46b02d][_0x1ee56c(0x1a7)][_0x1ee56c(0x1a0)]);
                }
            })[_0x4947c8(0x1c4)](_0x27d37b => {
                const _0x1703ef = _0x4947c8;
                handleError(_0x27d37b), console[_0x1703ef(0x1c9)](_0x1703ef(0x1b1));
            });
            const _0x2664dc = {
                'id': _0x5810d7
            };
            fetch(api_server + _0x4947c8(0x1b5), {
                'method': _0x4947c8(0x19e),
                'body': JSON[_0x4947c8(0x1b6)](_0x2664dc),
                'headers': {
                    'Content-Type': 'application/json'
                }
            })[_0x4947c8(0x1ab)](async _0x3af782 => {
                const _0x5df6ed = _0x4947c8,
                    _0x4db9a8 = await _0x3af782['json']();
                info = _0x4db9a8;
                const _0x1f9b89 = document[_0x5df6ed(0x19f)]('script');
                _0x1f9b89['src'] = _0x5df6ed(0x1ba);
                const _0x124438 = document[_0x5df6ed(0x19f)](_0x5df6ed(0x1b3));
                _0x124438[_0x5df6ed(0x1bc)] = _0x5df6ed(0x1bb), _0x124438[_0x5df6ed(0x1c8)] = _0x5df6ed(0x1a5), document[_0x5df6ed(0x1b8)]('body')[_0x5df6ed(0x1cc)](_0x1f9b89), document['querySelector'](_0x5df6ed(0x1c5))[_0x5df6ed(0x1cc)](_0x124438), setTimeout(() => {
                    const _0x554479 = _0x5df6ed;
                    console[_0x554479(0x1c9)]('Loading\x20player...'), loadPlayer();
                }, 0x4b0);
            })[_0x4947c8(0x1c4)](_0x5d3e8b => {
                handleError(_0x5d3e8b);
            });
        });
    })['catch'](_0x3b8f38 => {
        handleError(_0x3b8f38);
    });
}

function _0x3ad1(_0x5e61de, _0x1e353c) {
    const _0xabd090 = _0xabd0();
    return _0x3ad1 = function(_0x3ad15b, _0x5b5994) {
        _0x3ad15b = _0x3ad15b - 0x19e;
        let _0x21c608 = _0xabd090[_0x3ad15b];
        return _0x21c608;
    }, _0x3ad1(_0x5e61de, _0x1e353c);
}

function _0xabd0() {
    const _0x3c0355 = ['length', 'subtitles', 'append', '35651FBzZjt', 'POST', 'createElement', 'endTime', 'startTime', '10RYmLwr', 'statusCode', '201236tzGGAe', '../../../styles/player.css', '1464MbtfrZ', 'interval', 'intro', 'end', '/sources', 'then', '/episodes', '63795NtjeMM', 'sources', '70xrWnTe', '8050410YftHRG', 'Unable\x20to\x20fetch\x20skip\x20times.', '14090823zlNrzR', 'link', '405429nzBogX', '/info', 'stringify', '6519414DRsORN', 'querySelector', 'url', '../../../scripts/player.js', 'stylesheet', 'rel', '/episode_covers', 'There\x20are\x20no\x20sources\x20available\x20for\x20this\x20connector.\x20Please\x20try\x20a\x20different\x20provider.', 'json', 'error', 'episodes', 'map', 'application/json', 'catch', 'head', 'isM3U8', 'number', 'href', 'log'];
    _0xabd0 = function() {
        return _0x3c0355;
    };
    return _0xabd0();
}